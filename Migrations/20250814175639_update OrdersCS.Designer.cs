// <auto-generated />
using System;
using Backend.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250814175639_update OrdersCS")]
    partial class updateOrdersCS
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.API.Models.Domain.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PricePerUnit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Backend.API.Models.Domain.MineDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ContactNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("mineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MineDetails");
                });

            modelBuilder.Entity("Backend.API.Models.Domain.MineItemRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MineDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PricePerUnit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MineDetailsId");

                    b.ToTable("MineItemRate");
                });

            modelBuilder.Entity("Backend.API.Models.Domain.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("OrderValue")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<int>("itemPricePerUnit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderHistoryId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Backend.API.Models.Domain.OrderHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("MineId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MineId");

                    b.ToTable("OrderHistory");
                });

            modelBuilder.Entity("Backend.API.Models.Domain.MineItemRate", b =>
                {
                    b.HasOne("Backend.API.Models.Domain.MineDetails", null)
                        .WithMany("MineItems")
                        .HasForeignKey("MineDetailsId");
                });

            modelBuilder.Entity("Backend.API.Models.Domain.Order", b =>
                {
                    b.HasOne("Backend.API.Models.Domain.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.API.Models.Domain.OrderHistory", "OrderHistory")
                        .WithMany("Orders")
                        .HasForeignKey("OrderHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("OrderHistory");
                });

            modelBuilder.Entity("Backend.API.Models.Domain.OrderHistory", b =>
                {
                    b.HasOne("Backend.API.Models.Domain.MineDetails", "Mine")
                        .WithMany()
                        .HasForeignKey("MineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mine");
                });

            modelBuilder.Entity("Backend.API.Models.Domain.MineDetails", b =>
                {
                    b.Navigation("MineItems");
                });

            modelBuilder.Entity("Backend.API.Models.Domain.OrderHistory", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
